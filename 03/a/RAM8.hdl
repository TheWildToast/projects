// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[0..2], a=a1, b=b2, c=c3, d=d4, e=e5, f=f6, g=g7, h=h8);
    Register(in=l, load=a1, out=outr0);
    Register(in=m, load=b2, out=outr1);
    Register(in=n, load=c3, out=outr2);
    Register(in=o, load=d4, out=outr3);
    Register(in=p, load=e5, out=outr4);
    Register(in=q, load=f6, out=outr5);
    Register(in=r, load=g7, out=outr6);
    Register(in=s, load=h8, out=outr7);
    Mux8Way16(a=outr0, b=outr1, c=outr2, d=outr3, e=outr4, f=outr5, g=outr6, h=outr7, sel=address[0..2], out= out);
    
    // Put your code here:
}